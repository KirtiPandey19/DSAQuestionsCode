GFG:Remove Loop in LinkedList
class Solution {
    // Function to remove a loop in the linked list.
    public static void removeLoop(Node head) {
        // If the list is empty or contains only one node
        if (head == null || head.next == null) {
            return;
        }

        // Use Floyd's Cycle Detection Algorithm to detect the loop
        Node slow = head;
        Node fast = head;

        // Move slow by one and fast by two nodes to detect a cycle
        while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;

            // If slow and fast meet, there is a loop
            if (slow == fast) {
                break;
            }
        }

        // If no loop is detected, return
        if (slow != fast) {
            return;
        }

        // If there is a loop, remove it
        // Move one pointer to the head and move both pointers one step at a time
        slow = head;
        if (slow == fast) { // special case when the loop starts at head
            while (fast.next != slow) {
                fast = fast.next;
            }
        } else {
            while (slow.next != fast.next) {
                slow = slow.next;
                fast = fast.next;
            }
        }

        // Remove the loop by setting the last node's next pointer to null
        fast.next = null;
    }
}
